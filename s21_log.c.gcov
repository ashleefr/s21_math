        -:    0:Source:s21_log.c
        -:    1:#include "s21_math.h"
        -:    2:
       11:    3:long double s21_log(double x) {
       11:    4:    int denominator = 2;
       11:    5:    long double result = 0.0;
       11:    6:    long double term, temp = 0;
       11:    7:    int power_of_one = -1;
       11:    8:    if (x == S21_INF) {
        1:    9:        result = -S21_INF;
       10:   10:    } else if (x < 0.0) {
        2:   11:        result = S21_NAN;
        8:   12:    } else if (x == 1.0) {
        3:   13:        result = 0.;
        5:   14:    } else if (x == 0.0) {
    #####:   15:        result = -S21_INF;
        5:   16:    } else if (x > 1.0) {
        2:   17:        term = (x - 1.0) / x;
        2:   18:        temp = term;
   179998:   19:        while (denominator < 90000) {
   179996:   20:            result += temp;
   179996:   21:            term *= (x - 1.0) / x;
   179996:   22:            temp = term * (1.0 / denominator);
   179996:   23:            denominator++;
        -:   24:        }
        3:   25:    } else if (x > 0.0 && x < 1.0) {
        3:   26:        term = x - 1.0;
        3:   27:        temp = term;
       78:   28:        while (s21_fabs((double) temp) > S21_EPS) {
       75:   29:            if (temp > S21_EPS) {
    #####:   30:                result -= temp;
        -:   31:            } else {
       75:   32:                result += temp;
        -:   33:            }
       75:   34:            term *= (x - 1.0);
       75:   35:            temp = term * power_of_one;
       75:   36:            temp /= denominator;
       75:   37:            power_of_one *= -1;
       75:   38:            denominator++;
        -:   39:        }
        3:   40:        result += temp;
        -:   41:    }
       11:   42:    return result;
        -:   43:}
