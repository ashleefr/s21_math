        -:    0:Source:s21_exp.c
        -:    1:#include "s21_math.h"
        -:    2:
     7012:    3:long double s21_exp(double x) {
     7012:    4:    long double result = 0;
     7012:    5:    double i = 0;
     7012:    6:    long double temp = pow_integer(x, i) / factorial(i);
     7012:    7:    int check_minus = 0;
     7012:    8:    if (x < 0) {
        5:    9:        check_minus = 1;
        5:   10:        x = -x;
        -:   11:    }
    21196:   12:    while (temp > S21_EPS) {
    14184:   13:        temp = pow_integer(x, i) / factorial(i);
    14184:   14:        result += temp;
    14184:   15:        i++;
        -:   16://        printf("[DEBUG] %i: our = %Lf\tmath=%lf\n", i, result, pow(x, i) / );
        -:   17://        printf("[DEBUG] %d: pow = %Lf\tfactorial = %Lf\tresult = %Lf\tdivide = %Lf\n", i, pow_integer(x, i), factorial(i), result, pow_integer(x, i) / factorial(i));
        -:   18:    }
     7012:   19:    check_minus ? result = 1.0 / result : 0;
     7012:   20:    return result;
        -:   21:} // возвращает значение e, возведенное в заданную степень
